[{"title":"PlacementService.Client","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PlacementService.Client","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlacementService.Client","url":"/roblox-sparkles-docs/api/PlacementService.Client#functions","content":" "},{"title":"PlaceModel​","type":1,"pageTitle":"PlacementService.Client","url":"/roblox-sparkles-docs/api/PlacementService.Client#PlaceModel","content":"&lt;/&gt; PlacementService.Client:PlaceModel( player: Player , args: table-- table of arguments ) → boolean-- true if successfully placed, false otherwise Client access to PlaceModel  "},{"title":"RemoveModel​","type":1,"pageTitle":"PlacementService.Client","url":"/roblox-sparkles-docs/api/PlacementService.Client#RemoveModel","content":"&lt;/&gt; PlacementService.Client:RemoveModel( player: player, args: table ) → () Client access to RemoveModel "},{"title":"PlacementService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PlacementService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#functions","content":" "},{"title":"GenerateBoundingBox​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#GenerateBoundingBox","content":"&lt;/&gt; PlacementService:GenerateBoundingBox( model: Model -- the model to make a bounding box for ) → nil Generate bounding boxes for props  "},{"title":"PlaceModel​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#PlaceModel","content":"&lt;/&gt; PlacementService:PlaceModel( player: Player , args: table-- table of arguments {Model: string, Floor: BasePart} ) → boolean-- true if successfully placed, false otherwise Place a model  "},{"title":"RemoveModel​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#RemoveModel","content":"&lt;/&gt; PlacementService:RemoveModel( player: player, args: table ) → () TODO: Removes a model  "},{"title":"GetMatrix​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#GetMatrix","content":"&lt;/&gt; PlacementService:GetMatrix(floorPart: BasePart ) → nil Get pathfinding matrix of a given ShopFloor part  "},{"title":"GetMatrixCoordinate​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#GetMatrixCoordinate","content":"&lt;/&gt; PlacementService:GetMatrixCoordinate( floorPart: BasePart , position: Vector3 ) → number,number-- i, j representing matrix[i][j] Get matrix coordinates of a position relative to a ShopFloor part  "},{"title":"LookForProduct​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#LookForProduct","content":"&lt;/&gt; PlacementService:LookForProduct( floorPart: BasePart , itemName: string ) → table-- returns table with the shelf BoundingBox instances Get bounding boxes of shelves that hold a given item TODO: Make it return the shelf replicas, not bounding boxes  "},{"title":"AddFloor​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#AddFloor","content":"&lt;/&gt; PlacementService:AddFloor(floorPart: BasePart ) → nil Add a new floor part  "},{"title":"KnitStart​","type":1,"pageTitle":"PlacementService","url":"/roblox-sparkles-docs/api/PlacementService#KnitStart","content":"&lt;/&gt; PlacementService:KnitStart() → nil Start PlacementService "},{"title":"CallbackQueue","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/CallbackQueue","content":"On this page CallbackQueue Author(s): Jesse Appleton Date: 02/22/2022 Creates a queue of callbacks that execute in the sequence they were added. Waits until the callback has completed or the timeout has been reached to move on to the next one. FUNCTION CallbackQueue.new( processTimeout: number? = 60 ) -&gt; {} FUNCTION CallbackQueue:Add( fn: ()-&gt;(), ...: any ) -&gt; ( Promise ) FUNCTION CallbackQueue:AddAsync( fn: ()-&gt;(), ...: any ) -&gt; ( ...any )","keywords":""},{"title":"CustomerController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/CustomerController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CustomerController","url":"/roblox-sparkles-docs/api/CustomerController#functions","content":" "},{"title":"KnitInit​","type":1,"pageTitle":"CustomerController","url":"/roblox-sparkles-docs/api/CustomerController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; CustomerController:KnitInit() → () Initialize CustomerController  "},{"title":"KnitStart​","type":1,"pageTitle":"CustomerController","url":"/roblox-sparkles-docs/api/CustomerController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; CustomerController:KnitStart() → () Start CustomerController "},{"title":"DataTemplate","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/DataTemplate","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"DataTemplate","url":"/roblox-sparkles-docs/api/DataTemplate#types","content":" "},{"title":"Playerdata​","type":1,"pageTitle":"DataTemplate","url":"/roblox-sparkles-docs/api/DataTemplate#Playerdata","content":"&lt;/&gt; interface Playerdata { _build: string-- The version of the game that this player's data was last saved with } The default playerdata template for new players "},{"title":"Properties​","type":1,"pageTitle":"DataTemplate","url":"/roblox-sparkles-docs/api/DataTemplate#properties","content":" "},{"title":"name​","type":1,"pageTitle":"DataTemplate","url":"/roblox-sparkles-docs/api/DataTemplate#name","content":"&lt;/&gt; DataTemplate.name: KEYS_TO_IGNORE An array of strings to ignore w/replication to clients "},{"title":"Items","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/Items","content":"On this page Items Author: ArtemisTheDeer Date: 11/28/2023 Project: roblox-sparkles Description: Key/pair table of all available items in-game","keywords":""},{"title":"PlayerService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PlayerService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerService","url":"/roblox-sparkles-docs/api/PlayerService#functions","content":" "},{"title":"KnitInit​","type":1,"pageTitle":"PlayerService","url":"/roblox-sparkles-docs/api/PlayerService#KnitInit","content":"&lt;/&gt; PlayerService:KnitInit() → nil Initialize PlayerService  "},{"title":"KnitStart​","type":1,"pageTitle":"PlayerService","url":"/roblox-sparkles-docs/api/PlayerService#KnitStart","content":"&lt;/&gt; PlayerService:KnitStart() → nil Start PlayerService "},{"title":"PlacementController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PlacementController","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#properties","content":" "},{"title":"GRID_UNIT​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#GRID_UNIT","content":"&lt;/&gt; PlacementController.GRID_UNIT: number Grid unit for snapping prop placement "},{"title":"Functions​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#functions","content":" "},{"title":"StartPlacement​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#StartPlacement","content":"&lt;/&gt; PlacementController:StartPlacement( modelName: string-- name of the prop ) → nil Start placing a prop  "},{"title":"StopPlacement​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#StopPlacement","content":"&lt;/&gt; PlacementController:StopPlacement() → nil Stop prop placement mode  "},{"title":"KnitStart​","type":1,"pageTitle":"PlacementController","url":"/roblox-sparkles-docs/api/PlacementController#KnitStart","content":"&lt;/&gt; PlacementController:KnitStart() → nil Start PropController "},{"title":"NPCController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/NPCController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NPCController","url":"/roblox-sparkles-docs/api/NPCController#functions","content":" "},{"title":"KnitInit​","type":1,"pageTitle":"NPCController","url":"/roblox-sparkles-docs/api/NPCController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; NPCController:KnitInit() → () Initialize NPCController  "},{"title":"KnitStart​","type":1,"pageTitle":"NPCController","url":"/roblox-sparkles-docs/api/NPCController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; NPCController:KnitStart() → () Start NPCController "},{"title":"PropController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PropController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PropController","url":"/roblox-sparkles-docs/api/PropController#functions","content":" "},{"title":"KnitStart​","type":1,"pageTitle":"PropController","url":"/roblox-sparkles-docs/api/PropController#KnitStart","content":"&lt;/&gt; PropController:KnitStart() → nil Start PropController "},{"title":"CurrencyController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/CurrencyController","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CurrencyController","url":"/roblox-sparkles-docs/api/CurrencyController#properties","content":" "},{"title":"CurrencyUpdated​","type":1,"pageTitle":"CurrencyController","url":"/roblox-sparkles-docs/api/CurrencyController#CurrencyUpdated","content":"&lt;/&gt; CurrencyController.CurrencyUpdated: signal CurrencyUpdated is a signal that is a member of CurrencyController - it fires with the currency that was updated + the new value whenever a currency on the client updates "},{"title":"Functions​","type":1,"pageTitle":"CurrencyController","url":"/roblox-sparkles-docs/api/CurrencyController#functions","content":" "},{"title":"KnitInit​","type":1,"pageTitle":"CurrencyController","url":"/roblox-sparkles-docs/api/CurrencyController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; CurrencyController:KnitInit() → nil Initialize CurrencyController  "},{"title":"KnitStart​","type":1,"pageTitle":"CurrencyController","url":"/roblox-sparkles-docs/api/CurrencyController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; CurrencyController:KnitStart() → nil Start CurrencyController "},{"title":"MainGuiController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/MainGuiController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#functions","content":" "},{"title":"GetControllerFromScreenName​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#GetControllerFromScreenName","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:GetControllerFromScreenName( screenName: string-- name of the screen: E.g. &quot;BuildScreen&quot; or &quot;BuildScreenController&quot; ) → ANY_TABLE Get a particular controller based on given screen name  "},{"title":"ShowScreen​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#ShowScreen","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:ShowScreen( screenName: string,-- name of the screen: E.g. &quot;BuildScreen&quot; or &quot;BuildScreenController&quot; closeOtherScreens: boolean-- set to true to close all the other screens ) → () Show a particular screen  "},{"title":"HideScreen​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#HideScreen","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:HideScreen( screenName: string-- name of the screen: E.g. &quot;BuildScreen&quot; or &quot;BuildScreenController&quot; ) → () Hide a particular screen  "},{"title":"HideAllScreens​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#HideAllScreens","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:HideAllScreens() → () Hide ALL screens  "},{"title":"ToggleScreen​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#ToggleScreen","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:ToggleScreen( screenName: string,-- name of the screen: E.g. &quot;BuildScreen&quot; or &quot;BuildScreenController&quot; leaveOtherScreensOpen: boolean-- set to true to leave other screens open when toggling ) → () Toggle a particular screen  "},{"title":"GetVisibilityState​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#GetVisibilityState","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:GetVisibilityState( screenName: string-- name of the screen: E.g. &quot;BuildScreen&quot; or &quot;BuildScreenController&quot; ) → any Get visibility state of a screen Returns visibility state of a particular screen Example: local buildScreenVisible = MainGuiController:GetVisibilityState(&quot;BuildScreen&quot;) print(buildScreenVisible:get()) -- will print true/false  "},{"title":"KnitInit​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:KnitInit() → nil Initialize MainGuiController  "},{"title":"KnitStart​","type":1,"pageTitle":"MainGuiController","url":"/roblox-sparkles-docs/api/MainGuiController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; MainGuiController:KnitStart() → nil Start MainGuiController "},{"title":"CustomerService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/CustomerService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#functions","content":" "},{"title":"GenerateCustomer​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#GenerateCustomer","content":"&lt;/&gt; CustomerService:GenerateCustomer( Replication: table,-- An array of players to replicate this customer to - if no table is provided (nil), then the customer will replicate to all clients Origin: Vector3 ,-- The starting position of the customer NPC rigType: string,-- The type of rig to use for the customer NPC rigClass: string ) → Promise&lt;T&gt;-- Returns a promise that resolves with the new customer table and rejects if it cannot Generates a new customer class  "},{"title":"DestroyCustomer​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#DestroyCustomer","content":"&lt;/&gt; CustomerService:DestroyCustomer( CustomerID: string-- The customer ID to destroy ) → Promise&lt;T&gt;-- Returns a promise that resolves if the customer was deleted successfully and rejects if it cannot Destroys an existing customer class  "},{"title":"AddItemToCart​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#AddItemToCart","content":"&lt;/&gt; CustomerService:AddItemToCart( CustomerID: string,-- The unique ID of the customer itemId: string,-- The item ID that you want to add to the customer's cart itemQuantity: number-- The amount of copies of the item that you want to add to the customer's cart ) → Promise&lt;T&gt;-- Returns a promise that resolves with the current cart and new item count (two variables), or rejects if it cannot be added to the cart for some reason Adds a new item (Or multiple of the same item) to a customer's cart  "},{"title":"RemoveItemFromCart​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#RemoveItemFromCart","content":"&lt;/&gt; CustomerService:RemoveItemFromCart( CustomerID: string,-- The unique ID of the customer itemId: string,-- The item ID that you want to remove from the customer's cart itemQuantity: number-- The amount of copies of the item that you want to remove from the customer's cart ) → Promise&lt;T&gt;-- Returns a promise that resolves with the current cart and new item count (two variables), or rejects if it cannot be removed from the cart for some reason Removes an item (Or multiple of the same item) from a customer's cart  "},{"title":"PurchaseItemsInCart​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#PurchaseItemsInCart","content":"&lt;/&gt; CustomerService:PurchaseItemsInCart( CustomerID: string,-- The ID of the customer storeOwner: Player ) → ANY_TABLE &quot;Purchases&quot; the items in a player's cart and credits the storeOwner player with the equivalent amount of credits  "},{"title":"KnitInit​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#KnitInit","content":"This item only works when running on the server. Server &lt;/&gt; CustomerService:KnitInit() → nil Initialize CustomerService  "},{"title":"KnitStart​","type":1,"pageTitle":"CustomerService","url":"/roblox-sparkles-docs/api/CustomerService#KnitStart","content":"This item only works when running on the server. Server &lt;/&gt; CustomerService:KnitStart() → nil Start CustomerService "},{"title":"Customer","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/Customer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Customer","url":"/roblox-sparkles-docs/api/Customer#functions","content":" "},{"title":"Destroy​","type":1,"pageTitle":"Customer","url":"/roblox-sparkles-docs/api/Customer#Destroy","content":"This item only works when running on the server. Server &lt;/&gt; Customer.Destroy( self: Customer-- References the customer's self class to destroy ) → nil Destroys a customer class  "},{"title":"AddItemToCart​","type":1,"pageTitle":"Customer","url":"/roblox-sparkles-docs/api/Customer#AddItemToCart","content":"This item only works when running on the server. Server &lt;/&gt; Customer.AddItemToCart( self: Customer,-- References the customer itemId: string,-- The ID of the item to add itemQuantity: number-- The amount of the item to add ) → Promise&lt;T&gt;-- Returns a promise that resolves with the new updated shopping cart and new item quantity if the item is successfully added, and rejects if it cannot be added Adds an item to a customer's cart  "},{"title":"RemoveItemFromCart​","type":1,"pageTitle":"Customer","url":"/roblox-sparkles-docs/api/Customer#RemoveItemFromCart","content":"This item only works when running on the server. Server &lt;/&gt; Customer.RemoveItemFromCart( self: Customer,-- References the customer itemId: string,-- The ID of the item to remove itemQuantity: number-- The quantity of the item to remove - if the number provided is ) → Promise&lt;T&gt;-- Returns a promise that resolves with the new updated shopping cart and new item quantity if the item is successfully added, and rejects if it cannot be added Removes an item from a customer's cart  "},{"title":"new​","type":1,"pageTitle":"Customer","url":"/roblox-sparkles-docs/api/Customer#new","content":"&lt;/&gt; Customer.new( Replication: table,-- An array of players to replicate this customer to - if no table is provided (nil), then the customer will replicate to all clients Origin: Vector3 ,-- The starting position of the customer NPC rigType: string,-- The type of rig to use for the customer NPC rigClass: string ) → Promise&lt;T&gt;-- Returns a promise that resolves with the new customer table and rejects if it cannot Generates a new customer class "},{"title":"DataController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/DataController","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#properties","content":" "},{"title":"DATA_LOAD_TIMEOUT​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#DATA_LOAD_TIMEOUT","content":"&lt;/&gt; DataController.DATA_LOAD_TIMEOUT: number The max amount of time to wait for the playerdata to be cached on the client (From the server) on init before timing out and rejecting any associated promises/fallback behavior "},{"title":"Functions​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#functions","content":" "},{"title":"GetData​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#GetData","content":"This item only works when running on the client. Client This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; DataController:GetData() → Promise&lt;T&gt;-- Returns a promise that resolves with the playerdata/rejects if unable to get playerdata Returns a promise that resolves with the playerdata once successfully loaded for the first time, and rejects if the player's data cannot be retrieved for some reason  "},{"title":"GetKey​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#GetKey","content":"This item only works when running on the client. Client &lt;/&gt; DataController:GetKey( Key: string-- The key that you want to lookup in the player data table ) → Promise&lt;T&gt;-- Returns a promise that resolves w/the value from the player's data, and rejects if the player's data could not be loaded in time and/or the key does not exist Returns a promise that resolves with a specific value (Looked up by key) from the playerdata, and rejects if the playerdata was unable to be loaded/the key does not exist  "},{"title":"GetKeyUpdatedSignal​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#GetKeyUpdatedSignal","content":"This item only works when running on the client. Client This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; DataController:GetKeyUpdatedSignal( Key: string-- The key that you want to lookup in the player data table. Can be a specific path if desired (Eg. &quot;Currencies&quot; to listen to currency changes as a whole or &quot;Currencies.Coins&quot; to listen to all coin changes) ) → Promise&lt;T&gt;-- Returns a promise that resolves w/a signal that fires when the specific key is updated, and rejects if the playerdata isn't loaded in-time Returns a signal that fires (With the value) when the Key argument in the playerdata is updated  "},{"title":"DisconnectKeyUpdatedSignal​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#DisconnectKeyUpdatedSignal","content":"This item only works when running on the client. Client &lt;/&gt; DataController:DisconnectKeyUpdatedSignal( Key: string-- The key to disconnect - can be a specific path if desired (Eg. &quot;Currencies&quot; to disconnect a signal for &quot;Currencies&quot; or &quot;Currencies.Coins&quot; to disconnect the &quot;Coins&quot; signal) ) → nil Removes a data updated connection from the table Warning: Will disconnect all events tied to that key!  "},{"title":"KnitInit​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#KnitInit","content":"&lt;/&gt; DataController:KnitInit() → nil Initialize DataController Get the replica of the playerdata from the server, and then set the cachedPlayerdata varaible as the replica  "},{"title":"KnitStart​","type":1,"pageTitle":"DataController","url":"/roblox-sparkles-docs/api/DataController#KnitStart","content":"&lt;/&gt; DataController:KnitStart() → nil Start DataController "},{"title":"NPCService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/NPCService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NPCService","url":"/roblox-sparkles-docs/api/NPCService#functions","content":" "},{"title":"GenerateNPC​","type":1,"pageTitle":"NPCService","url":"/roblox-sparkles-docs/api/NPCService#GenerateNPC","content":"This item only works when running on the server. Server &lt;/&gt; NPCService:GenerateNPC( Replication: {Player } | string,-- What player(s) should be replicated to; can be a single string (The name of the player to replicate to), or an array of player(s) Tags: table,-- Optional list of tags Body: table-- Key/pair array of values to replicate ) → Promise&lt;T&gt;-- Returns a promise that resolves with the newly created NPC class if successful, and rejects if not Generate a new NPC class  "},{"title":"DestroyNPC​","type":1,"pageTitle":"NPCService","url":"/roblox-sparkles-docs/api/NPCService#DestroyNPC","content":"This item only works when running on the server. Server &lt;/&gt; NPCService:DestroyNPC( replicaId: string-- The ID of the NPC you want to destroy ) → Promise&lt;T&gt;-- Returns a promise that resolves if an NPC with the provided replicaId exists and is destroyed, and rejects if it cannot be found/destroyed Deletes a NPC class  "},{"title":"KnitInit​","type":1,"pageTitle":"NPCService","url":"/roblox-sparkles-docs/api/NPCService#KnitInit","content":"&lt;/&gt; NPCService:KnitInit() → () Initialize NPCService  "},{"title":"KnitStart​","type":1,"pageTitle":"NPCService","url":"/roblox-sparkles-docs/api/NPCService#KnitStart","content":"&lt;/&gt; NPCService:KnitStart() → () Start NPCService "},{"title":"Replica","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/Replica","content":"On this page Replica Replica class (Client)","keywords":""},{"title":"ReplicaUtil","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ReplicaUtil","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ReplicaUtil","url":"/roblox-sparkles-docs/api/ReplicaUtil#functions","content":" "},{"title":"getParent​","type":1,"pageTitle":"ReplicaUtil","url":"/roblox-sparkles-docs/api/ReplicaUtil#getParent","content":"&lt;/&gt; ReplicaUtil.getParent( path: string, data: {any} ) → ( {any}?, string? ) return table, string "},{"title":"PropReplicaService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PropReplicaService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#functions","content":" "},{"title":"AddReplica​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#AddReplica","content":"&lt;/&gt; PropReplicaService:AddReplica( data: table-- data to be associated to the replica ) → replica-- created replica Add a new prop replica  "},{"title":"GetFromBoundingBox​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#GetFromBoundingBox","content":"&lt;/&gt; PropReplicaService:GetFromBoundingBox( boundingBox: BasePart -- the bounding box part of the prop ) → replica Gets replica given a BoundingBox. Try to use :GetFromId() instead where possible  "},{"title":"GetFromId​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#GetFromId","content":"&lt;/&gt; PropReplicaService:GetFromId( replicaId: string-- the replicaId ) → replica Gets replica given a ReplicaId  "},{"title":"RemoveReplica​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#RemoveReplica","content":"&lt;/&gt; PropReplicaService:RemoveReplica( replicaId: string-- the replicaId ) → boolean-- true if found and removed, false otherwise Remove a prop replica and destroy it  "},{"title":"KnitStart​","type":1,"pageTitle":"PropReplicaService","url":"/roblox-sparkles-docs/api/PropReplicaService#KnitStart","content":"&lt;/&gt; PropReplicaService:KnitStart() → nil Start PropReplicaService "},{"title":"PlayerdataService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/PlayerdataService","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#properties","content":" "},{"title":"STORE_NAME​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#STORE_NAME","content":"&lt;/&gt; PlayerdataService.STORE_NAME: string The datastore to use with profileservice for storing playerdata  "},{"title":"DATA_PREFIX​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#DATA_PREFIX","content":"&lt;/&gt; PlayerdataService.DATA_PREFIX: string The prefix to amend to the key used for saving playerdata (Eg. &quot;Playerdata_123&quot;)  "},{"title":"DATA_LOAD_RETRIES​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#DATA_LOAD_RETRIES","content":"&lt;/&gt; PlayerdataService.DATA_LOAD_RETRIES: number The maximum amount of times to try to load a player's data (On joining the game) before rejecting the promise associated w/it  "},{"title":"DATA_LOAD_RETRY_DELAY​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#DATA_LOAD_RETRY_DELAY","content":"&lt;/&gt; PlayerdataService.DATA_LOAD_RETRY_DELAY: number How long to wait between failed attempts with loading a player's data (On joining the game) before retrying  "},{"title":"LOAD_PLAYERDATA_IN_STUDIO​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#LOAD_PLAYERDATA_IN_STUDIO","content":"&lt;/&gt; PlayerdataService.LOAD_PLAYERDATA_IN_STUDIO: boolean Boolean that determines whether player save profiles should be loaded while in a Roblox studio session If true, playerdata will load in studio. If false, playerdata will not be loaded in studio "},{"title":"Functions​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#functions","content":" "},{"title":"GetPlayerdata​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#GetPlayerdata","content":"This item only works when running on the client. Client &lt;/&gt; PlayerdataService:GetPlayerdata(Player: Player ) → Promise&lt;T&gt;-- A promise that resolves with a table of the player's data if the playerdata exists, and rejects if the playerdata does not exist Returns a promise that resolves with a table of the player's data, and rejects if it cannot be retrieved for some reason If the playerdata is not loaded already, :_createPlayerdataProfile(Player: Player) will be called server-side first  "},{"title":"GetPlayerdata​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#GetPlayerdata","content":"This item only works when running on the server. Server &lt;/&gt; PlayerdataService:GetPlayerdata(Player: Player ) → Promise&lt;T&gt;-- A promise that resolves with a table of the player's data if the playerdata exists, and rejects if the playerdata does not exist Returns a promise that resolves with a table of the player's data, and rejects if it cannot be retrieved for some reason If the playerdata is not loaded already, :_createPlayerdataProfile(Player: Player) will be called first  "},{"title":"KnitInit​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#KnitInit","content":"This item only works when running on the server. Server &lt;/&gt; PlayerdataService:KnitInit() → nil Initialize PlayerdataService  "},{"title":"KnitStart​","type":1,"pageTitle":"PlayerdataService","url":"/roblox-sparkles-docs/api/PlayerdataService#KnitStart","content":"This item only works when running on the server. Server &lt;/&gt; PlayerdataService:KnitStart() → nil Start PlayerdataService "},{"title":"ShelfService.Client","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ShelfService.Client","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ShelfService.Client","url":"/roblox-sparkles-docs/api/ShelfService.Client#functions","content":" "},{"title":"StockShelf​","type":1,"pageTitle":"ShelfService.Client","url":"/roblox-sparkles-docs/api/ShelfService.Client#StockShelf","content":"&lt;/&gt; ShelfService.Client:StockShelf( player: Player , replicaId: string, itemName: string ) → boolean-- true if successfully stocked, false otherwise Client access to StockShelf "},{"title":"ShelfService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ShelfService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ShelfService","url":"/roblox-sparkles-docs/api/ShelfService#functions","content":" "},{"title":"StockShelf​","type":1,"pageTitle":"ShelfService","url":"/roblox-sparkles-docs/api/ShelfService#StockShelf","content":"&lt;/&gt; ShelfService:StockShelf( replicaId: string,-- the replica ID of the shelf itemName: string-- name of the item you are stocking the shelf with ) → boolean-trueifsuccessfullystocked,falseotherwise Stock the shelf  "},{"title":"TakeFromShelf​","type":1,"pageTitle":"ShelfService","url":"/roblox-sparkles-docs/api/ShelfService#TakeFromShelf","content":"&lt;/&gt; ShelfService:TakeFromShelf( replicaId: string,-- the replica ID of the shelf amount: number-- how much you want to take ) → nil Take specified amount of product from a shelf  "},{"title":"KnitStart​","type":1,"pageTitle":"ShelfService","url":"/roblox-sparkles-docs/api/ShelfService#KnitStart","content":"&lt;/&gt; ShelfService:KnitStart() → nil Start ShelfService "},{"title":"BuildScreenController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/BuildScreenController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#functions","content":" "},{"title":"GetStates​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#GetStates","content":"This item only works when running on the client. Client &lt;/&gt; BuildScreenController:GetStates() → {isVisible: Fusion.StateObject&lt;boolean&gt;} This is a REQUIRED method for all screens It is responsible for returning the current states  "},{"title":"Show​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#Show","content":"This item only works when running on the client. Client &lt;/&gt; BuildScreenController:Show() → () This is a REQUIRED method for all screens It is responsible for showing this screenGui Example Usage: MainGuiController:ShowScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"Hide​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#Hide","content":"This item only works when running on the client. Client &lt;/&gt; BuildScreenController:Hide() → () This is a REQUIRED method for all screens It is responsible for hiding this screenGui Example Usage: MainGuiController:HideScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"KnitInit​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; BuildScreenController:KnitInit() → nil Initialize BuildScreenController  "},{"title":"KnitStart​","type":1,"pageTitle":"BuildScreenController","url":"/roblox-sparkles-docs/api/BuildScreenController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; BuildScreenController:KnitStart() → nil Start BuildScreenController "},{"title":"ReplicaController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ReplicaController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ReplicaController","url":"/roblox-sparkles-docs/api/ReplicaController#functions","content":" "},{"title":"replicaOfClassCreated​","type":1,"pageTitle":"ReplicaController","url":"/roblox-sparkles-docs/api/ReplicaController#replicaOfClassCreated","content":"&lt;/&gt; ReplicaController:replicaOfClassCreated( class: string,-- The class of replica that you want to connect to (Eg. &quot;Playerdata&quot;) callback: function-- A function that will be called when a new Replica object of the same class parameter is created - only argument provided is the newly created Replica object ) → function-- Returns a function that (When called) disconnects the created script connection When a new Replica object of the 'class' parameter is added, the 'callback' function is called (The provided argument is the new Replica object)  "},{"title":"KnitInit​","type":1,"pageTitle":"ReplicaController","url":"/roblox-sparkles-docs/api/ReplicaController#KnitInit","content":"&lt;/&gt; ReplicaController:KnitInit() → () Initialize ReplicaController  "},{"title":"KnitStart​","type":1,"pageTitle":"ReplicaController","url":"/roblox-sparkles-docs/api/ReplicaController#KnitStart","content":"&lt;/&gt; ReplicaController:KnitStart() → () Start ReplicaController "},{"title":"ReplicaService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ReplicaService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ReplicaService","url":"/roblox-sparkles-docs/api/ReplicaService#functions","content":" "},{"title":"CreateReplica​","type":1,"pageTitle":"ReplicaService","url":"/roblox-sparkles-docs/api/ReplicaService#CreateReplica","content":"&lt;/&gt; ReplicaService:CreateReplica( ClassName: string,-- The ClassName of the Replica object Replication: {Player } | Player ,-- An array of (Or single) player(s) to replicate this data to Tags: {string},-- An optional array of strings to assign to this object (For keeping track of inheritance) Body: {any}-- A key/pair table of values to replicate to the client (Accepts strings as keys, and key/pair values/arrays - do not mix key/pair + arrays together!) ) → Promise&lt;T&gt;-- Returns a promise that resolves with Replica, replicaId: string if a replica is successfully created, and rejects if it is not Create a new Replica object  "},{"title":"KnitInit​","type":1,"pageTitle":"ReplicaService","url":"/roblox-sparkles-docs/api/ReplicaService#KnitInit","content":"&lt;/&gt; ReplicaService:KnitInit() → () Initialize ReplicaService  "},{"title":"KnitStart​","type":1,"pageTitle":"ReplicaService","url":"/roblox-sparkles-docs/api/ReplicaService#KnitStart","content":"&lt;/&gt; ReplicaService:KnitStart() → () Start ReplicaService "},{"title":"CurrencyService","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/CurrencyService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CurrencyService","url":"/roblox-sparkles-docs/api/CurrencyService#functions","content":" "},{"title":"AddCurrency​","type":1,"pageTitle":"CurrencyService","url":"/roblox-sparkles-docs/api/CurrencyService#AddCurrency","content":"&lt;/&gt; CurrencyService:AddCurrency( Player: Player ,-- The player to add currency to currencyType: string,-- The type of currency to add to the player amount: number-- The amount of currency to add to the player ) → Promise&lt;T&gt;-- Returns a promise that resolves with the player's new currency amount, and rejects with a table (Two keys are set under the table: Reason: string and Message: string) if the currency cannot be added for some reason Adds currency to a specific player  "},{"title":"SubtractCurrency​","type":1,"pageTitle":"CurrencyService","url":"/roblox-sparkles-docs/api/CurrencyService#SubtractCurrency","content":"&lt;/&gt; CurrencyService:SubtractCurrency( Player: Player ,-- The player to deduct currency from currencyType: string,-- The type of currency to deduct from the player amount: number-- The amount of currency to deduct from the player ) → Promise&lt;T&gt;-- Returns a promise that resolves with the player's new currency amount, and rejects with a table (Two keys are set under the table: Reason: string and Message: string) if the transaction cannot be completed for some reason Subtracts currency from a specific player  "},{"title":"KnitInit​","type":1,"pageTitle":"CurrencyService","url":"/roblox-sparkles-docs/api/CurrencyService#KnitInit","content":"This item only works when running on the server. Server &lt;/&gt; CurrencyService:KnitInit() → nil Initialize CurrencyService  "},{"title":"KnitStart​","type":1,"pageTitle":"CurrencyService","url":"/roblox-sparkles-docs/api/CurrencyService#KnitStart","content":"This item only works when running on the server. Server &lt;/&gt; CurrencyService:KnitStart() → nil Start CurrencyService "},{"title":"ShelfController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ShelfController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ShelfController","url":"/roblox-sparkles-docs/api/ShelfController#functions","content":" "},{"title":"KnitStart​","type":1,"pageTitle":"ShelfController","url":"/roblox-sparkles-docs/api/ShelfController#KnitStart","content":"&lt;/&gt; ShelfController:KnitStart() → nil Start ShelfController "},{"title":"ShopScreenController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ShopScreenController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#functions","content":" "},{"title":"GetStates​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#GetStates","content":"This item only works when running on the client. Client &lt;/&gt; ShopScreenController:GetStates() → {isVisible: Fusion.StateObject&lt;boolean&gt;} This is a REQUIRED method for all screens It is responsible for returning the current states  "},{"title":"Show​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#Show","content":"This item only works when running on the client. Client &lt;/&gt; ShopScreenController:Show() → () This is a REQUIRED method for all screens It is responsible for showing this screenGui Example Usage: MainGuiController:ShowScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"Hide​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#Hide","content":"This item only works when running on the client. Client &lt;/&gt; ShopScreenController:Hide() → () This is a REQUIRED method for all screens It is responsible for hiding this screenGui Example Usage: MainGuiController:HideScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"KnitInit​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; ShopScreenController:KnitInit() → nil Initialize ShopScreenController  "},{"title":"KnitStart​","type":1,"pageTitle":"ShopScreenController","url":"/roblox-sparkles-docs/api/ShopScreenController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; ShopScreenController:KnitStart() → nil Start ShopScreenController "},{"title":"TopMenuController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/TopMenuController","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"TopMenuController","url":"/roblox-sparkles-docs/api/TopMenuController#functions","content":" "},{"title":"KnitInit​","type":1,"pageTitle":"TopMenuController","url":"/roblox-sparkles-docs/api/TopMenuController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; TopMenuController:KnitInit() → nil Initialize TopMenuController  "},{"title":"KnitStart​","type":1,"pageTitle":"TopMenuController","url":"/roblox-sparkles-docs/api/TopMenuController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; TopMenuController:KnitStart() → nil Start TopMenuController "},{"title":"NPC","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/NPC","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NPC","url":"/roblox-sparkles-docs/api/NPC#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NPC","url":"/roblox-sparkles-docs/api/NPC#new","content":"This item only works when running on the client. Client &lt;/&gt; NPC.new(Replica: Replica) → Promise&lt;T&gt;-- Returns a promise that resolves with the NPC class if successfully generated, and rejects if not Create a new NPC class  "},{"title":"new​","type":1,"pageTitle":"NPC","url":"/roblox-sparkles-docs/api/NPC#new","content":"This item only works when running on the client. Client &lt;/&gt; NPC.new(Replica: Replica) → Promise&lt;T&gt;-- Returns a promise that resolves with the NPC class if successfully generated, and rejects if not Create a new NPC class "},{"title":"Types","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/Types","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#types","content":" "},{"title":"ANY_TABLE​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#ANY_TABLE","content":"&lt;/&gt; type ANY_TABLE = {[any]: any} Generic table type (Wildcard) - accepts any values  "},{"title":"ReplicaPathListener​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#ReplicaPathListener","content":"&lt;/&gt; type ReplicaPathListener = ( newValue: any, oldValue: any ) → ()   "},{"title":"ReplicaListener​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#ReplicaListener","content":"&lt;/&gt; type ReplicaListener = (replica: Replica) → ()   "},{"title":"ReplicaParams​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#ReplicaParams","content":"&lt;/&gt; type ReplicaParams = { ClassName: string, Data: {[string]: any}, Tags: {[string]: any}, Replication: (string | {Player }) } Replica class parameters  "},{"title":"ReplicaPath​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#ReplicaPath","content":"&lt;/&gt; type ReplicaPath = {string} A path to a key in the player's data (Eg. &quot;_configuration._build&quot;)  "},{"title":"Replica​","type":1,"pageTitle":"Types","url":"/roblox-sparkles-docs/api/Types#Replica","content":"&lt;/&gt; type Replica = {} ClassName: string, Data: { any }, Tags: { any }, Replication: { any }, SetParent: (self: Replica, replica: Replica) -&gt; (), DestroyFor: (self: Replica, Player) -&gt; (), Destroy: (self: Replica) -&gt; (), SetValue: (self: Replica, path: string, value: any) -&gt; (), SetValues: (self: Replica, path: string, values: { [string]: any }) -&gt; (), ArrayInsert: (self: Replica, path: string, value: any) -&gt; (), ArraySet: (self: Replica, path: string, index: number, value: any) -&gt; (), ArrayRemove: (self: Replica, path: string, index: number) -&gt; (), ConnectOnServerEvent: (self: Replica, listener: () -&gt; ()) -&gt; (), ConnectOnClientEvent: (self: Replica, listener: () -&gt; ()) -&gt; (), ListenToChildAdded: (self: Replica, child: Replica) -&gt; (), ListenToRaw: (self: Replica, listener: (listenerType: string, path: { string }, any) -&gt; ()) -&gt; (), ListenToChange: (self: Replica, path: string, listener: (newValue: any, oldValue: any) -&gt; ()) -&gt; (), ListenToNewKey: (self: Replica, path: string, listener: (value: any, newKey: string) -&gt; ()) -&gt; (), ListenToKeyChanged: (self: Replica, path: string, listener: (newValue: any, oldValue: any) -&gt; ()) -&gt; (), ListenToArrayInsert: (self: Replica, path: string, listener: (index: number, value: any) -&gt; ()) -&gt; (), ListenToArraySet: (self: Replica, path: string, listener: (index: number, value: any) -&gt; ()) -&gt; (), ListenToArrayRemove: (self: Replica, path: string, listener: (index: number, value: any) -&gt; ()) -&gt; (), } The members of the server/client Replica controller/service "},{"title":"ServerReplica","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ServerReplica","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#functions","content":" "},{"title":"SetValue​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#SetValue","content":"&lt;/&gt; ServerReplica:SetValue( path: stringThepathtoupdate., value: anyThevaluetoupdatethepathto. ) → Promise&lt;T&gt;-- Returns a promise that resolves if updated data should be sent to the client (An array of arguments to send via the ReplicaService.newReplica signal), and rejects if the key is the same/errors Sets value from path.  "},{"title":"SetValues​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#SetValues","content":"&lt;/&gt; ServerReplica:SetValues( path: stringThepathtoupdate., values: tableAdictionaryofvaluestoupdate. ) → Promise&lt;T&gt;-- Returns a promise that resolves if updated data should be sent to the client (An array of arguments to send via the ReplicaService.replicaListener signal), and rejects if the key is the same/errors Sets multiple values at once from the path  "},{"title":"ArrayInsert​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#ArrayInsert","content":"&lt;/&gt; ServerReplica:ArrayInsert( path: stringThepathofthearraytoupdate., value: anyThevaluetoinsertintothepatharray. ) → Promise&lt;T&gt;-- Returns a promise that resolves with the data that should be replicated to the client + the length of the new array (An array of arguments to send via the ReplicaService.replicaListener signal), and rejects if the pointer does not exist Inserts value into array found at the specified path.  "},{"title":"ArraySet​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#ArraySet","content":"&lt;/&gt; ServerReplica:ArraySet( path: stringThepathofthearraytoupdate, index: numberTheindextoupdateinthespecifiedtable, value: anyThevaluetosettheindexto ) → Promise&lt;T&gt;-- Returns a promise that resolves with the data that should be replicated to the client + the index (An array of arguments to send via the ReplicaService.replicaListener signal), and rejects if the pointer does not exist, the index is not already set, or if the index value is equal to the new value Sets index of array found at the specified path  "},{"title":"ArrayRemove​","type":1,"pageTitle":"ServerReplica","url":"/roblox-sparkles-docs/api/ServerReplica#ArrayRemove","content":"&lt;/&gt; ServerReplica:ArrayRemove( path: stringThepathofthearraytoupdate., index: numberTheindextoremovefromthearray. ) → Promise&lt;T&gt;-- Returns a promise that resolves with the data that should be replicated to the client + the removed value (An array of arguments to send via the ReplicaService.replicaListener signal), and rejects if the pointer does not exist, the index is not already set, or if the index value is equal to the new value Removes index from array found at the specified path. "},{"title":"ShopFloor","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/ShopFloor","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#properties","content":" "},{"title":"GRID_UNIT​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#GRID_UNIT","content":"&lt;/&gt; ShopFloor.GRID_UNIT: number Grid unit for snapping prop placement "},{"title":"Functions​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#new","content":"&lt;/&gt; ShopFloor.new( floorPart: BasePart , ownerId: number-- user ID of the player who owns the floor ) → () Create new ShopFloor  "},{"title":"GetMatrix​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#GetMatrix","content":"&lt;/&gt; ShopFloor:GetMatrix() → table-- table representing pathfinding matrix Get pathfinding matrix  "},{"title":"GetMatrixCoordinate​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#GetMatrixCoordinate","content":"&lt;/&gt; ShopFloor:GetMatrixCoordinate(position: Vector3 ) → number,number-- i, j representing matrix[i][j] Get matrix coordinates of a position relative to a ShopFloor part  "},{"title":"PlaceProp​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#PlaceProp","content":"&lt;/&gt; ShopFloor:PlaceProp( prop: Model ,-- the prop model cf: CFrame -- CFrame to place at ) → () Place prop  "},{"title":"RemoveProp​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#RemoveProp","content":"&lt;/&gt; ShopFloor:RemoveProp( prop: Model -- the prop model ) → boolean-- true if prop was found and removed, false otherwise Remove prop  "},{"title":"GetShelves​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#GetShelves","content":"&lt;/&gt; ShopFloor:GetShelves() → shelvestable-- array of bounding boxes of shelves Get bounding boxes of shelves  "},{"title":"LookForProduct​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#LookForProduct","content":"&lt;/&gt; ShopFloor:LookForProduct( itemName: string-- name of item ) → shelvesWithItemtable-- array of bounding boxes of shelves containing specified item Look for shelves containing specified item  "},{"title":"SetOwner​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#SetOwner","content":"&lt;/&gt; ShopFloor:SetOwner(ownerId: number) → () Set owner of shop floor  "},{"title":"Reset​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#Reset","content":"&lt;/&gt; ShopFloor:Reset() → () Wipe all props off shop floor and set OwnerId to nil  "},{"title":"Destroy​","type":1,"pageTitle":"ShopFloor","url":"/roblox-sparkles-docs/api/ShopFloor#Destroy","content":"&lt;/&gt; ShopFloor:Destroy() → () Destroy shop floor "},{"title":"TemplateController","type":0,"sectionRef":"#","url":"/roblox-sparkles-docs/api/TemplateController","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#properties","content":" "},{"title":"name​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#name","content":"&lt;/&gt; TemplateController.name: DEFAULT_HIDDEN_POSITION Determines the hidden position of this UI This is calculated by adding this UDim2 to the ORIGIN UDim2 of the frame  "},{"title":"name​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#name","content":"&lt;/&gt; TemplateController.name: DEFAULT_HIDDEN_POSITION Determines the hidden position of this UI This is calculated by adding this UDim2 to the ORIGIN UDim2 of the frame  "},{"title":"name​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#name","content":"&lt;/&gt; TemplateController.name: DEFAULT_HIDDEN_POSITION Determines the hidden position of this UI This is calculated by adding this UDim2 to the ORIGIN UDim2 of the frame "},{"title":"Functions​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#functions","content":" "},{"title":"GetStates​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#GetStates","content":"This item only works when running on the client. Client &lt;/&gt; TemplateController:GetStates() → {isVisible: Fusion.StateObject&lt;boolean&gt;} This is a REQUIRED method for all screens It is responsible for returning the current states  "},{"title":"Show​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#Show","content":"This item only works when running on the client. Client &lt;/&gt; TemplateController:Show() → () This is a REQUIRED method for all screens It is responsible for showing this screenGui Example Usage: MainGuiController:ShowScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"Hide​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#Hide","content":"This item only works when running on the client. Client &lt;/&gt; TemplateController:Hide() → () This is a REQUIRED method for all screens It is responsible for hiding this screenGui Example Usage: MainGuiController:HideScreen(&quot;Template&quot;) will automatically call THIS function AND also CLOSE the other visible screens  "},{"title":"KnitInit​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#KnitInit","content":"This item only works when running on the client. Client &lt;/&gt; TemplateController:KnitInit() → nil Initialize TemplateController  "},{"title":"KnitStart​","type":1,"pageTitle":"TemplateController","url":"/roblox-sparkles-docs/api/TemplateController#KnitStart","content":"This item only works when running on the client. Client &lt;/&gt; TemplateController:KnitStart() → nil Start TemplateController "}]