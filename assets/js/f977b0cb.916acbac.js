"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2896],{34343:e=>{e.exports=JSON.parse('{"functions":[{"name":"_automaticService","desc":"Automatic checkout enchantment (Shop owner does not need to interact w/this prop to process customer transactions)\\nThis function toggles the enhancement\'s functionality (Whether it\'s enabled or not)","params":[{"name":"self","desc":"The prop class","lua_type":"table"},{"name":"doEnable","desc":"Should this enchantment be enabled?","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":87,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"OnClientInit","desc":"Set up clientside prop behavior","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":127,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"_recalculateQueueLength","desc":"Recalculates the length of the queue on server init/when a prop is added/removed","params":[],"returns":[{"desc":"Returns the available queue length","lua_type":"number"}],"function_type":"method","private":true,"source":{"line":155,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"OnServerInit","desc":"Set up server-side prop behavior","params":[],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":209,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"AddCustomerToQueue","desc":"Adds a customer to the prop\'s queue for processing","params":[{"name":"Customer","desc":"The customer table to add to the prop queue","lua_type":"table"}],"returns":[{"desc":"Returns a boolean if the customer was successfully added to the queue, and returns false if not","lua_type":"boolean"}],"function_type":"method","source":{"line":256,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"RemoveCustomerFromQueue","desc":"Removes a customer from the queue","params":[{"name":"CustomerID","desc":"ID of the customer to remove from the queue","lua_type":"string"},{"name":"refreshQueue","desc":"Whether the queue should be automatically refreshed w/NPC positions since this customer was removed from the list","lua_type":"boolean?"}],"returns":[{"desc":"Returns true if the customer was successfully removed from the queue, and false if not","lua_type":"boolean"}],"function_type":"method","source":{"line":275,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"RefreshQueuePositions","desc":"Refreshes the positions of NPCs in the queue","params":[],"returns":[],"function_type":"method","private":true,"source":{"line":305,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"_navigateCustomerToQueuePoint","desc":"Moves a customer to a new desired position","params":[{"name":"customerKey","desc":"position of customer in line","lua_type":"number"}],"returns":[{"desc":"Returns true if the customer successfully had a path assigned, false if not","lua_type":"boolean"}],"function_type":"method","private":true,"source":{"line":342,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"_activatedService","desc":"Let the server know that the client has activated the service prop prompt","params":[{"name":"self","desc":"The respective prop class","lua_type":"table"},{"name":"Player","desc":"The player invoking the remote","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":406,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"new","desc":"Creates a new furniture object","params":[{"name":"floorId","desc":"The ID of the floor this prop is being placed on","lua_type":"string"},{"name":"ownerId","desc":"The user ID of the player who owns the floor this prop is placed on","lua_type":"number"},{"name":"existingFurnitureData","desc":"(Optional) Existing saved furniture data for this prop","lua_type":"table?"}],"returns":[{"desc":"Returns a new furniture class","lua_type":"table"}],"function_type":"static","source":{"line":441,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}}],"properties":[{"name":"MAX_CUSTOMERS_IN_LINE","desc":"The amount of customers (Max) that can line up at a prop at once\\n\\nThis is the max number of customers in a line, regardless of depth.\\nIf items are in front of the prop, the max queue depth is reduced to fit as many customers as possible (Up to the max queue limit)","lua_type":"number","source":{"line":38,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}},{"name":"CUSTOMER_PURCHASE_TIMEOUT","desc":"How long a customer will wait after approaching a service (To check out w/the items in their cart/ask for a specific service) before they walk out of the store/abandon the transaction","lua_type":"number","source":{"line":45,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}}],"types":[],"name":"ServiceBaseClass","desc":"Author: ArtemisTheDeer\\nDate: 01/09/2024\\nProject: roblox-sparkles\\n\\nDescription: Base class for service props","source":{"line":10,"path":"src/Shared/Modules/Furniture/ServiceBaseClass.lua"}}')}}]);