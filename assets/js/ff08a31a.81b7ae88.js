"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[641],{25281:e=>{e.exports=JSON.parse('{"functions":[{"name":"SetValue","desc":"Sets value from path.","params":[{"name":"path","desc":"","lua_type":"string The path to update."},{"name":"value","desc":"","lua_type":"any The value to update the path to."}],"returns":[{"desc":"Returns a promise that resolves if updated data should be sent to the client (An array of arguments to send via the [ReplicaService.newReplica] signal), and rejects if the key is the same/errors","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":92,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}},{"name":"SetValues","desc":"Sets multiple values at once from the path","params":[{"name":"path","desc":"","lua_type":"string The path to update."},{"name":"values","desc":"","lua_type":"table A dictionary of values to update."}],"returns":[{"desc":"Returns a promise that resolves if updated data should be sent to the client (An array of arguments to send via the [ReplicaService.replicaListener] signal), and rejects if the key is the same/errors","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":155,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}},{"name":"ArrayInsert","desc":"Inserts value into array found at the specified path.","params":[{"name":"path","desc":"","lua_type":"string The path of the array to update."},{"name":"value","desc":"","lua_type":"any The value to insert into the path array."}],"returns":[{"desc":"Returns a promise that resolves with the data that should be replicated to the client + the length of the new array (An array of arguments to send via the [ReplicaService.replicaListener] signal), and rejects if the pointer does not exist","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":193,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}},{"name":"ArraySet","desc":"Sets index of array found at the specified path","params":[{"name":"path","desc":"","lua_type":"string The path of the array to update"},{"name":"index","desc":"","lua_type":"number The index to update in the specified table"},{"name":"value","desc":"","lua_type":"any The value to set the index to"}],"returns":[{"desc":"Returns a promise that resolves with the data that should be replicated to the client + the index (An array of arguments to send via the [ReplicaService.replicaListener] signal), and rejects if the pointer does not exist, the index is not already set, or if the index value is equal to the new value","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":221,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}},{"name":"ArrayRemove","desc":"Removes index from array found at the specified path.","params":[{"name":"path","desc":"","lua_type":"string The path of the array to update."},{"name":"index","desc":"","lua_type":"number The index to remove from the array."}],"returns":[{"desc":"Returns a promise that resolves with the data that should be replicated to the client + the removed value (An array of arguments to send via the [ReplicaService.replicaListener] signal), and rejects if the pointer does not exist, the index is not already set, or if the index value is equal to the new value","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":265,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}},{"name":"_fireListener","desc":"Fires the listeners associated with this replica/path","params":[{"name":"listenerType","desc":"The type of action to fire","lua_type":"string"},{"name":"path","desc":"The path of the key (Eg. \\"_configuration._build\\")","lua_type":"string"},{"name":"...","desc":"Any additional arguments","lua_type":"variadic"}],"returns":[],"function_type":"method","realm":["Server"],"private":true,"source":{"line":385,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}}],"properties":[],"types":[],"name":"ServerReplica","desc":"Replica class (Server) module","source":{"line":5,"path":"src/Server/Services/Data/ReplicaService/Replica.lua"}}')}}]);