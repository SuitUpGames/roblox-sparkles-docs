"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[897],{11060:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Create new ShopFloor","params":[{"name":"floorPart","desc":"The BasePart for the shop floor","lua_type":"BasePart"},{"name":"storeData","desc":"","lua_type":"ANY_TABLE"}],"returns":[{"desc":"Returns the newly created ShopFloor class","lua_type":"table"}],"function_type":"static","source":{"line":62,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"BuildShop","desc":"Assembles a shop building","params":[{"name":"floorDesign","desc":"(Optional) The building design to load - if arg is not provided, the building will reset to the default design","lua_type":"string?"}],"returns":[{"desc":"Returns true if the building design was successfully changed, and false if not","lua_type":"boolean"}],"function_type":"method","source":{"line":135,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"PlaceStarterProps","desc":"Places starter props down for new floor configurations","params":[],"returns":[],"function_type":"method","source":{"line":205,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"_processRemotePropInput","desc":"Processes incoming remote events (Related to a prop placed on the floor) from a client","params":[{"name":"Player","desc":"Player firing the remote","lua_type":"Player"},{"name":"propId","desc":"The ID of the prop to edit","lua_type":"string"},{"name":"propFunction","desc":"The function to fire under the prop","lua_type":"string"},{"name":"...","desc":"Variadic args to provide to the respective function","lua_type":"any"}],"returns":[{"desc":"Returns the callback from the respective function","lua_type":"any"}],"function_type":"method","private":true,"source":{"line":228,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"UpdateMatrix","desc":"Update pathfinding matrix for shop floor\\n!! ASSUMES FLOORPART SIZE IS DIVISIBLE BY GRID_UNIT","params":[],"returns":[],"function_type":"method","private":true,"source":{"line":244,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"GetMatrix","desc":"Get pathfinding matrix","params":[],"returns":[{"desc":"table representing pathfinding matrix","lua_type":"table"}],"function_type":"method","source":{"line":281,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"GetMatrixCoordinate","desc":"Get matrix coordinates of a position relative to a ShopFloor part","params":[{"name":"position","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"i, j representing matrix[i][j]","lua_type":"number, number"}],"function_type":"method","source":{"line":291,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"MoveProp","desc":"Move prop","params":[{"name":"replicaId","desc":"The replicaId of the prop","lua_type":"string"},{"name":"targetCFrame","desc":"The target CFrame to place the prop at","lua_type":"CFrame"}],"returns":[{"desc":"true if prop was successfully moved, false otherwise","lua_type":"boolean"}],"function_type":"method","source":{"line":316,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"roundNumber","desc":"Takes an incoming number and rounds it to the specified decimal","params":[{"name":"Value","desc":"The value to round","lua_type":"number"},{"name":"Decimal","desc":"The decimal place to round the value to (Eg. 1 = .1, 2 = .01, 3 = .003) - Defaults to 1","lua_type":"number?"}],"returns":[{"desc":"Returns the rounded decimal","lua_type":"number"}],"function_type":"static","private":true,"source":{"line":334,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"_decodeFurnitureData","desc":"Takes an incoming table from the datastore (The furniture table under Playerdata > StoreData > FloorConfiguration > Props) and returns a decoded version of the table (Where the saved format is converted to Roblox-native types)","params":[{"name":"furnitureData","desc":"The Props table from the Playerdata.StoreData.FloorConfiguration.Props table","lua_type":"table"}],"returns":[{"desc":"Returns the furnitureData table, but with the values inside the table converted to Roblox native types","lua_type":"table"}],"function_type":"method","private":true,"source":{"line":387,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"_encodeFurnitureKeyData","desc":"Takes an incoming value and returns a datastore-safe version of that value","params":[{"name":"inputType","desc":"The key of the incoming value","lua_type":"string"},{"name":"inputValue","desc":"Any incoming value","lua_type":"any"}],"returns":[{"desc":"A datastore-safe version of the incoming value","lua_type":"any"}],"function_type":"method","private":true,"source":{"line":404,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"PlaceProp","desc":"Place prop","params":[{"name":"prop","desc":"The name of the prop to place down","lua_type":"string"},{"name":"propId","desc":"(Optional) The ID of an existing prop under StoreData.FloorConfiguration.Props","lua_type":"string?"},{"name":"targetCFrame","desc":"The target CFrame to place the prop at. Required if creating a new prop for the first time, optional if propId argument is defined","lua_type":"CFrame?"}],"returns":[{"desc":"Returns a promise that resolves if the prop was successfully added to the shop floor, and rejects if not","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":417,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"RemoveProp","desc":"Remove prop","params":[{"name":"prop","desc":"The replica ID of the prop (string)","lua_type":"string"}],"returns":[{"desc":"true if prop was found and removed, false otherwise","lua_type":"boolean"}],"function_type":"method","source":{"line":504,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"LookForProp","desc":"Look for prop","params":[{"name":"propName","desc":"Name of prop to look for","lua_type":"string"}],"returns":[{"desc":"list of placed props with specified name","lua_type":"table"}],"function_type":"method","source":{"line":523,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"GetShelves","desc":"Get bounding boxes of shelves","params":[],"returns":[{"desc":"array of bounding boxes of shelves","lua_type":"shelves table"}],"function_type":"method","source":{"line":540,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"LookForProduct","desc":"Look for shelves containing specified item","params":[{"name":"itemName","desc":"Name of item","lua_type":"string"},{"name":"itemQuantity","desc":"(Optional) The required amount of copies that need to be stocked across all the shelves in the store","lua_type":"number?"}],"returns":[{"desc":"array that contains the list of shelves with the selected item on them","lua_type":"shelvesWithItem table"}],"function_type":"method","private":true,"source":{"line":561,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"_reloadProps","desc":"Erases all existing props placed down on the floor and reloads w/the provided FloorConfiguration table","params":[{"name":"FloorConfiguration","desc":"The saved configuration of the floor to load (From the player\'s data)","lua_type":"table"}],"returns":[],"function_type":"method","source":{"line":591,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"SetOwner","desc":"Set owner of shop floor","params":[{"name":"owner","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":610,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"Reset","desc":"Wipe all props off shop floor and set OwnerId/owner to nil","params":[{"name":"doNotResetOwner","desc":"If true, the owner data is not reset for the floor","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":656,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"GetProps","desc":"Returns all props from the shop floor","params":[],"returns":[{"desc":"List of props that are on the shop floor","lua_type":"table"}],"function_type":"method","source":{"line":681,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"Destroy","desc":"Destroy shop floor","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":689,"path":"src/Server/Services/Game/ShopFloor.lua"}}],"properties":[{"name":"GRID_UNIT","desc":"Grid unit for snapping prop placement","lua_type":"number","source":{"line":41,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"MAX_UNOCCUPIED_BUILDING_HEIGHT","desc":"(Optional) How many floors high a building can be (Not including the apartment on top) if nobody owns that store plot. If no number is defined, will default to 1","lua_type":"number?","source":{"line":48,"path":"src/Server/Services/Game/ShopFloor.lua"}},{"name":"CFRAME_DECIMAL_PRECISION","desc":"The decimal place to round saved CFrame position/rotation to when encoding to the datastore\\n\\nEg.\\n\\n1: .1\\n2: .01\\n3: .001\\n4: .0001","lua_type":"number","source":{"line":351,"path":"src/Server/Services/Game/ShopFloor.lua"}}],"types":[],"name":"ShopFloor","desc":"Author: Maxim Peng\\nProject: roblox-sparkles\\n\\nRepresents one floor of a shop","realm":["Server"],"source":{"line":10,"path":"src/Server/Services/Game/ShopFloor.lua"}}')}}]);