"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4597],{84308:e=>{e.exports=JSON.parse('{"functions":[{"name":"_playSound","desc":"Clones a specific sound file and parents to soundParent","params":[{"name":"Sound","desc":"The sound file to play - if no sound is provided, the currently playing sound track will stop","lua_type":"Sound?"},{"name":"soundParent","desc":"The parent instance to parent the newly cloned sound to","lua_type":"Instance"}],"returns":[{"desc":"Returns the newly cloned sound file","lua_type":"Sound"}],"function_type":"method","realm":["Client"],"private":true,"source":{"line":79,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"_playAnimation","desc":"Plays an animation under the LocalPlayer\'s character","params":[{"name":"Animation","desc":"The animation instance to load into the player - if no animation is provided, the currently playing animation will stop","lua_type":"Animation?"}],"returns":[{"desc":"Returns the newly loaded animation (If the Animation argument is provided)","lua_type":"AnimationTrack?"}],"function_type":"method","realm":["Client"],"private":true,"source":{"line":130,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"ChargeSpell","desc":"Creates a spell particle/sfx/plays an animation with the character when the spell is being charged - yields for however long is defined under the spell data\'s _time key","params":[{"name":"particleParent","desc":"The object (Attachment or BasePart) to parent the particle to","lua_type":"Attachment | BasePart"}],"returns":[{"desc":"Returns a boolean indicating whether the spell was succesfully cast or not","lua_type":"boolean"}],"function_type":"method","realm":["Client"],"yields":true,"source":{"line":153,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"CastSpell","desc":"Casts the spell from an origin position and moves the particle attachment to the target position - yields until the particle reaches the desired point","params":[{"name":"spellOrigin","desc":"The origin of the spell","lua_type":"CFrame"},{"name":"spellTarget","desc":"The target CFrame of the spell","lua_type":"CFrame"}],"returns":[{"desc":"Returns a boolean indicating whether the spell was successfully cast or not","lua_type":"boolean"}],"function_type":"method","realm":["Client"],"yields":true,"source":{"line":195,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"ImpactSpell","desc":"Creates the impact effect of the spell (If applicable) - yields for however long _time is defined for under the spellData table","params":[{"name":"spellTarget","desc":"The target CFrame of the spell (Where the particle should be positioned at)","lua_type":"CFrame"}],"returns":[{"desc":"Returns a boolean indicating whether the spell was successfully cast or not","lua_type":"boolean"}],"function_type":"method","realm":["Client"],"yields":true,"source":{"line":298,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"Destroy","desc":"Destroys the spell class","params":[{"name":"doNotCleanup","desc":"If false/nil, everything under the spell class is cleaned up","lua_type":"boolean?"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":348,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"new","desc":"Creates a new \'spell\' object","params":[{"name":"spellName","desc":"The spell to cast","lua_type":"string"}],"returns":[{"desc":"Returns a new \'spell\' class with the associated casting functions","lua_type":"table?"}],"function_type":"static","realm":["Client"],"source":{"line":363,"path":"src/Shared/Assets/MagicSpells/init.lua"}}],"properties":[{"name":"Spells","desc":"Key/pair table of spells and their associated settings\\n\\nKeys:\\n\\n_particle: (ParticleEmitter | Trail)? - the particle for the effect - can be a trail object if used for the Cast function (Only works for the cast function!)\\n_time: number? - The time to wait after the spell is cast before resolving the function\\n_sound: Sound? - The sound to play for this function\\n_animation: Animation? - The animation to play for this function","lua_type":"table","source":{"line":42,"path":"src/Shared/Assets/MagicSpells/init.lua"}},{"name":"SPELL_MOVEMENT_RADIUS","desc":"How many studs on the X/Y axis (Relative to the direction of the spell) that a spell can move (Based on sin/cos)","lua_type":"number","source":{"line":51,"path":"src/Shared/Assets/MagicSpells/init.lua"}}],"types":[],"name":"SpellFunctions","desc":"A table containing configuration data for magical spells (Player wand animations) in the game\\n\\nYou can create a new spell by requiring this module, and calling the .new function\\n\\nEg.\\n\\nlocal magicSpells = require(game.ReplicatedStorage.Shared.Assets.MagicSpells)\\nlocal mySpell = magicSpells.new(\\"ObjectPlaced\\")\\n\\nEach spell has three possible functions associated with them:\\n\\"Charge\\" - The charging function for the spell - called by calling mySpell:ChargeSpell(particlePart: BasePart | Attachment)\\n\\"Cast\\" - The casting function for the spell - called by calling mySpell:CastSpell(Origin: CFrame, Target: CFrame)\\n\\"Impact\\" - The impact function for the spell - called by calling mySpell:ImpactSpell(Target: CFrame)\\n\\nEach spells folder has a folder called \\"Particles\\" and \\"Sounds\\"\\n\\n\\"Particles\\" can contain ParticleEmitters/Trails called \\"Charge\\", \\"Cast\\", or \\"Impact\\"\\n\\"Sounds\\" can contain Sounds called \\"Charge\\", \\"Cast\\", or \\"Impact\\"\\n\\nParticles/sounds are optional, and if one does not exist under the respective folder (But the respective function is called), the particles/sounds for that function of the spell won\'t be used","source":{"line":24,"path":"src/Shared/Assets/MagicSpells/init.lua"}}')}}]);