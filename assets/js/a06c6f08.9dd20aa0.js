"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5118],{2196:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateReplica","desc":"Create a new [Replica] object","params":[{"name":"ClassName","desc":"The ClassName of the [Replica] object","lua_type":"string"},{"name":"Replication","desc":"An array of player(s) to replicate this data to","lua_type":"{Player}"},{"name":"Tags","desc":"An optional array of strings to assign to this object (For keeping track of inheritance)","lua_type":"{string}"},{"name":"Body","desc":"A key/pair table of values to replicate to the client (Accepts strings as keys, and key/pair values/arrays - do not mix key/pair + arrays together!)","lua_type":"{any}"}],"returns":[{"desc":"Returns a promise that resolves with [Replica], replicaId: string if a replica is successfully created, and rejects if it is not","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":45,"path":"src/Server/Services/Data/ReplicaService/init.lua"}},{"name":"DestroyReplica","desc":"Destroys a [Replica] object","params":[{"name":"replicaId","desc":"The ID of the replica to destroy","lua_type":"string"}],"returns":[{"desc":"Returns a promise that resolves if the replica is destroyed, and rejects if it is not","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":87,"path":"src/Server/Services/Data/ReplicaService/init.lua"}},{"name":"ReplicateChangesToClient","desc":"Replicates changes of a replica to client(s)","params":[{"name":"Replication","desc":"Array of player(s) to replicate to","lua_type":"table"},{"name":"replicaId","desc":"The replica ID","lua_type":"string"},{"name":"listenerType","desc":"The type of listener to fire","lua_type":"string"},{"name":"path","desc":"dot (eg. \\"my.path\\") string that reflects the hierarchy of the table/key needing to be updated","lua_type":"string"},{"name":"...","desc":"Variadic args","lua_type":"any"}],"returns":[],"function_type":"method","private":true,"source":{"line":112,"path":"src/Server/Services/Data/ReplicaService/init.lua"}},{"name":"KnitInit","desc":"Initialize ReplicaService","params":[],"returns":[],"function_type":"method","source":{"line":121,"path":"src/Server/Services/Data/ReplicaService/init.lua"}},{"name":"KnitStart","desc":"Start ReplicaService\\n\\nGoes through the list of currently loaded replicas (On init) and initiates them to the respective clients\\nAlso creates new replica instances (From existing ones) when players join the game","params":[],"returns":[],"function_type":"method","source":{"line":129,"path":"src/Server/Services/Data/ReplicaService/init.lua"}}],"properties":[],"types":[],"name":"ReplicaService","desc":"Author: ArtemisTheDeer\\nDate: 11/16/2023\\nProject: Sparkles\\n\\nDescription: Replica knit service","source":{"line":10,"path":"src/Server/Services/Data/ReplicaService/init.lua"}}')}}]);