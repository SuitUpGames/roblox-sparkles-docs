"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3235],{89165:e=>{e.exports=JSON.parse('{"functions":[{"name":"_renderRow","desc":"Replaces the products on a row on a shelf","params":[{"name":"rowNumber","desc":"The ID of the row to stock","lua_type":"number"},{"name":"stockedItems","desc":"Key/pair table of the items stocked on that specific row of the shelf - if no key is provided, row will be reset","lua_type":"table?"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","realm":["Client"],"private":true,"source":{"line":81,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"_renderShelf","desc":"Replaces the products on a shelf","params":[{"name":"shelfData","desc":"The shelving data from the server","lua_type":"table"}],"returns":[],"function_type":"method","realm":["Client"],"private":true,"source":{"line":134,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"OnClientInit","desc":"Set up clientside shelf behavior","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":144,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"StockShelf","desc":"Stocks the shelf","params":[{"name":"desiredProduct","desc":"The desired product to stock on the shelf","lua_type":"string"},{"name":"quantity","desc":"The quantity of the desired item to stock on the shelf (Defaults to 1). If quantity exceeds the available amount of desiredItem or quantity exceeds the available free space on the shelving unit, the promise will reject","lua_type":"number?"}],"returns":[{"desc":"Returns a promise that resolves with the new available amount of desiredItem from the shop owner\'s inventory, and rejects if an error occurs, there\'s not enough of desiredItem in the shop owner\'s inventory, or the quantity exceeds the free capacity of the shelf","lua_type":"Promise<T>"}],"function_type":"method","realm":["Server"],"source":{"line":171,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"TakeItemFromShelf","desc":"Take items from shelf","params":[{"name":"desiredProduct","desc":"The desired product to take off the shelf","lua_type":"string"},{"name":"quantity","desc":"How many of the item to remove from the shelf - defaults to 1","lua_type":"number?"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":295,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"_stockShelf","desc":"Stocks the shelf model w/a desired item, or erases the existing items from the shelf","params":[{"name":"self","desc":"The respective prop class","lua_type":"table"},{"name":"Player","desc":"The player invoking the remote","lua_type":"Player"},{"name":"...","desc":"Variadic args","lua_type":"any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":359,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"SetTotalItemCapacity","desc":"Calculate total item capacity of this shelf","params":[],"returns":[],"function_type":"method","source":{"line":366,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"SetReplicaData","desc":"Set replica data for this shelf","params":[{"name":"existingFurnitureData","desc":"(Optional) Existing saved furniture data for this prop","lua_type":"table?"}],"returns":[],"function_type":"method","source":{"line":374,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}},{"name":"new","desc":"Create new shelf object","params":[{"name":"floorId","desc":"The ID of the floor this prop is being placed on","lua_type":"string"},{"name":"ownerId","desc":"The user ID of the player who owns the floor this prop is placed on","lua_type":"number"},{"name":"existingFurnitureData","desc":"(Optional) Existing saved furniture data for this prop","lua_type":"table?"}],"returns":[{"desc":"Returns a new furniture class","lua_type":"table"}],"function_type":"static","source":{"line":421,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}}],"properties":[{"name":"PRODUCT_ROW_SIZES","desc":"The size of props (Depth-wise) in studs based on their classification\\nProps are spaced out based on the position of the last placed item in the row array + the size (Depth) of the prop\'s class","lua_type":"number","source":{"line":39,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}}],"types":[],"name":"ShelfBaseClass","desc":"Author: ArtemisTheDeer\\nDate: 01/29/2024\\nProject: roblox-sparkles\\n\\nDescription: Base class for shelves, inherits basic furniture behavior from FurnitureBaseClass","private":true,"source":{"line":11,"path":"src/Shared/Modules/Furniture/ShelfBaseClass.lua"}}')}}]);